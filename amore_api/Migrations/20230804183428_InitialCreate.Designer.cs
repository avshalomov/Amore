// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using amore_api.Models;

#nullable disable

namespace amore_api.Migrations
{
    [DbContext(typeof(AmoreDbContext))]
    [Migration("20230804183428_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("amore_api.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CartId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "UserID");

                    b.ToTable("cart", (string)null);

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            UserId = 3
                        },
                        new
                        {
                            CartId = 2,
                            UserId = 1
                        },
                        new
                        {
                            CartId = 3,
                            UserId = 4
                        },
                        new
                        {
                            CartId = 4,
                            UserId = 2
                        },
                        new
                        {
                            CartId = 5
                        },
                        new
                        {
                            CartId = 6,
                            UserId = 5
                        },
                        new
                        {
                            CartId = 7
                        },
                        new
                        {
                            CartId = 8
                        },
                        new
                        {
                            CartId = 9,
                            UserId = 6
                        },
                        new
                        {
                            CartId = 10
                        });
                });

            modelBuilder.Entity("amore_api.Models.Cartitem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartItemID");

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("CartID");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartItemId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CartId" }, "CartID");

                    b.HasIndex(new[] { "ProductId" }, "ProductID");

                    b.ToTable("cartitems", (string)null);

                    b.HasData(
                        new
                        {
                            CartItemId = 1,
                            CartId = 1,
                            ProductId = 5,
                            Quantity = 2
                        },
                        new
                        {
                            CartItemId = 2,
                            CartId = 1,
                            ProductId = 11,
                            Quantity = 1
                        },
                        new
                        {
                            CartItemId = 3,
                            CartId = 2,
                            ProductId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            CartItemId = 4,
                            CartId = 2,
                            ProductId = 15,
                            Quantity = 2
                        },
                        new
                        {
                            CartItemId = 5,
                            CartId = 2,
                            ProductId = 19,
                            Quantity = 1
                        },
                        new
                        {
                            CartItemId = 6,
                            CartId = 3,
                            ProductId = 2,
                            Quantity = 5
                        },
                        new
                        {
                            CartItemId = 7,
                            CartId = 4,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            CartItemId = 8,
                            CartId = 6,
                            ProductId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            CartItemId = 9,
                            CartId = 6,
                            ProductId = 24,
                            Quantity = 1
                        },
                        new
                        {
                            CartItemId = 10,
                            CartId = 6,
                            ProductId = 26,
                            Quantity = 2
                        },
                        new
                        {
                            CartItemId = 11,
                            CartId = 6,
                            ProductId = 30,
                            Quantity = 1
                        },
                        new
                        {
                            CartItemId = 12,
                            CartId = 6,
                            ProductId = 31,
                            Quantity = 1
                        },
                        new
                        {
                            CartItemId = 13,
                            CartId = 9,
                            ProductId = 21,
                            Quantity = 4
                        },
                        new
                        {
                            CartItemId = 14,
                            CartId = 9,
                            ProductId = 28,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("amore_api.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "UserID")
                        .HasDatabaseName("UserID1");

                    b.ToTable("order", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            OrderDate = new DateTime(2023, 8, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            OrderId = 2,
                            OrderDate = new DateTime(2023, 8, 2, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 3,
                            OrderDate = new DateTime(2023, 8, 3, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            OrderId = 4,
                            OrderDate = new DateTime(2023, 8, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 5,
                            OrderDate = new DateTime(2023, 8, 4, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            OrderId = 6,
                            OrderDate = new DateTime(2023, 8, 5, 16, 20, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        },
                        new
                        {
                            OrderId = 7,
                            OrderDate = new DateTime(2023, 8, 6, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            OrderId = 8,
                            OrderDate = new DateTime(2023, 8, 7, 13, 10, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 9,
                            OrderDate = new DateTime(2023, 8, 8, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 10,
                            OrderDate = new DateTime(2023, 8, 9, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("amore_api.Models.Orderitem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItemID");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "OrderID");

                    b.HasIndex(new[] { "ProductId" }, "ProductID")
                        .HasDatabaseName("ProductID1");

                    b.ToTable("orderitems", (string)null);

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            OrderId = 1,
                            ProductId = 5,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 2,
                            OrderId = 1,
                            ProductId = 11,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 3,
                            OrderId = 2,
                            ProductId = 8,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 4,
                            OrderId = 2,
                            ProductId = 15,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 5,
                            OrderId = 2,
                            ProductId = 19,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 6,
                            OrderId = 3,
                            ProductId = 2,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 7,
                            OrderId = 4,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 8,
                            OrderId = 6,
                            ProductId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 9,
                            OrderId = 6,
                            ProductId = 24,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 10,
                            OrderId = 6,
                            ProductId = 26,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 11,
                            OrderId = 6,
                            ProductId = 30,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 12,
                            OrderId = 6,
                            ProductId = 31,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 13,
                            OrderId = 7,
                            ProductId = 17,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 14,
                            OrderId = 7,
                            ProductId = 18,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 15,
                            OrderId = 9,
                            ProductId = 21,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 16,
                            OrderId = 9,
                            ProductId = 28,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 17,
                            OrderId = 10,
                            ProductId = 12,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 18,
                            OrderId = 10,
                            ProductId = 20,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("amore_api.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Jeans",
                            DateAdded = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic blue slim fit jeans.",
                            Price = 49.99m,
                            ProductName = "Slim Fit Jeans",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "T-Shirts",
                            DateAdded = new DateTime(2023, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cotton t-shirt with blue and white stripes.",
                            Price = 19.99m,
                            ProductName = "Striped T-Shirt",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "Jackets",
                            DateAdded = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Black leather jacket with zipper.",
                            Price = 99.99m,
                            ProductName = "Leather Jacket",
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "Shoes",
                            DateAdded = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Black leather ankle boots for women.",
                            Price = 79.99m,
                            ProductName = "Ankle Boots",
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = 5,
                            Category = "Socks",
                            DateAdded = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pack of 5 pairs of cotton socks.",
                            Price = 9.99m,
                            ProductName = "Cotton Socks",
                            StockQuantity = 300
                        },
                        new
                        {
                            ProductId = 6,
                            Category = "Sweaters",
                            DateAdded = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Warm wool sweater in light grey color.",
                            Price = 59.99m,
                            ProductName = "Wool Sweater",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 7,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Elegant silk scarf with floral pattern.",
                            Price = 29.99m,
                            ProductName = "Silk Scarf",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 8,
                            Category = "Skirts",
                            DateAdded = new DateTime(2023, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Black pleated skirt in midi length.",
                            Price = 39.99m,
                            ProductName = "Pleated Skirt",
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = 9,
                            Category = "Bags",
                            DateAdded = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Large tote bag in brown leather.",
                            Price = 69.99m,
                            ProductName = "Tote Bag",
                            StockQuantity = 90
                        },
                        new
                        {
                            ProductId = 10,
                            Category = "Jackets",
                            DateAdded = new DateTime(2023, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Green bomber jacket with side pockets.",
                            Price = 89.99m,
                            ProductName = "Bomber Jacket",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 11,
                            Category = "Sportswear",
                            DateAdded = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High support sports bra in black.",
                            Price = 24.99m,
                            ProductName = "Sports Bra",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 12,
                            Category = "Shoes",
                            DateAdded = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Men's running shoes in white.",
                            Price = 59.99m,
                            ProductName = "Running Shoes",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 13,
                            Category = "Shorts",
                            DateAdded = new DateTime(2023, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High waisted denim shorts for women.",
                            Price = 29.99m,
                            ProductName = "Denim Shorts",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 14,
                            Category = "Polos",
                            DateAdded = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Polo shirt in navy blue for men.",
                            Price = 34.99m,
                            ProductName = "Men's Polo",
                            StockQuantity = 180
                        },
                        new
                        {
                            ProductId = 15,
                            Category = "Shoes",
                            DateAdded = new DateTime(2023, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Colorful sneakers for kids.",
                            Price = 29.99m,
                            ProductName = "Kids Sneakers",
                            StockQuantity = 250
                        },
                        new
                        {
                            ProductId = 16,
                            Category = "Baby",
                            DateAdded = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cotton romper with cute prints for babies.",
                            Price = 14.99m,
                            ProductName = "Baby Romper",
                            StockQuantity = 300
                        },
                        new
                        {
                            ProductId = 17,
                            Category = "Sportswear",
                            DateAdded = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comfortable cycling gloves in black.",
                            Price = 19.99m,
                            ProductName = "Cycling Gloves",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 18,
                            Category = "Jackets",
                            DateAdded = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Waterproof rain jacket in yellow.",
                            Price = 49.99m,
                            ProductName = "Rain Jacket",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 19,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "UV protection sunglasses with round frames.",
                            Price = 29.99m,
                            ProductName = "Sunglasses",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 20,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wide brim beach hat in straw.",
                            Price = 19.99m,
                            ProductName = "Beach Hat",
                            StockQuantity = 220
                        },
                        new
                        {
                            ProductId = 21,
                            Category = "Shoes",
                            DateAdded = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic white canvas sneakers.",
                            Price = 39.99m,
                            ProductName = "Canvas Sneakers",
                            StockQuantity = 250
                        },
                        new
                        {
                            ProductId = 22,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Brown leather belt with brass buckle.",
                            Price = 24.99m,
                            ProductName = "Leather Belt",
                            StockQuantity = 300
                        },
                        new
                        {
                            ProductId = 23,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Warm wool hat for winter.",
                            Price = 19.99m,
                            ProductName = "Wool Hat",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 24,
                            Category = "Sportswear",
                            DateAdded = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comfortable gym shorts for men.",
                            Price = 29.99m,
                            ProductName = "Gym Shorts",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 25,
                            Category = "Sportswear",
                            DateAdded = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Non-slip yoga mat.",
                            Price = 34.99m,
                            ProductName = "Yoga Mat",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 26,
                            Category = "Jackets",
                            DateAdded = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blue denim jacket with buttons.",
                            Price = 59.99m,
                            ProductName = "Denim Jacket",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 27,
                            Category = "Dresses",
                            DateAdded = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Elegant silk dress in black.",
                            Price = 89.99m,
                            ProductName = "Silk Dress",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 28,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Compact leather wallet for men.",
                            Price = 49.99m,
                            ProductName = "Leather Wallet",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 29,
                            Category = "Shoes",
                            DateAdded = new DateTime(2023, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Knee-high suede boots for women.",
                            Price = 99.99m,
                            ProductName = "Suede Boots",
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = 30,
                            Category = "Underwear",
                            DateAdded = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pack of 3 cotton boxers for men.",
                            Price = 29.99m,
                            ProductName = "Cotton Boxers",
                            StockQuantity = 300
                        },
                        new
                        {
                            ProductId = 31,
                            Category = "Swimwear",
                            DateAdded = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Two-piece bikini in floral print.",
                            Price = 39.99m,
                            ProductName = "Bikini",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 32,
                            Category = "Swimwear",
                            DateAdded = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Long sleeve rash guard for surfing.",
                            Price = 49.99m,
                            ProductName = "Rash Guard",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 33,
                            Category = "Pants",
                            DateAdded = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khaki cargo pants for men.",
                            Price = 59.99m,
                            ProductName = "Cargo Pants",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 34,
                            Category = "Pants",
                            DateAdded = new DateTime(2023, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Grey pleated trousers for women.",
                            Price = 59.99m,
                            ProductName = "Pleated Trousers",
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = 35,
                            Category = "Tops",
                            DateAdded = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "White lace blouse with long sleeves.",
                            Price = 49.99m,
                            ProductName = "Lace Blouse",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 36,
                            Category = "Accessories",
                            DateAdded = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Knitted beanie in multiple colors.",
                            Price = 14.99m,
                            ProductName = "Beanie",
                            StockQuantity = 250
                        },
                        new
                        {
                            ProductId = 37,
                            Category = "Shirts",
                            DateAdded = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Long sleeve denim shirt for men.",
                            Price = 39.99m,
                            ProductName = "Denim Shirt",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 38,
                            Category = "Sweaters",
                            DateAdded = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Soft cashmere sweater in beige.",
                            Price = 79.99m,
                            ProductName = "Cashmere Sweater",
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = 39,
                            Category = "Dresses",
                            DateAdded = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Floral print maxi dress for women.",
                            Price = 69.99m,
                            ProductName = "Maxi Dress",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 40,
                            Category = "Shirts",
                            DateAdded = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Striped rugby shirt for men.",
                            Price = 44.99m,
                            ProductName = "Rugby Shirt",
                            StockQuantity = 150
                        });
                });

            modelBuilder.Entity("amore_api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateCreated = new DateTime(2023, 2, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@mail.com",
                            LastLoginDate = new DateTime(2023, 8, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            DateCreated = new DateTime(2023, 2, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@yahoo.com",
                            LastLoginDate = new DateTime(2023, 8, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "johnDoe"
                        },
                        new
                        {
                            UserId = 3,
                            DateCreated = new DateTime(2023, 3, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@gmail.com",
                            LastLoginDate = new DateTime(2023, 8, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "janeSmith"
                        },
                        new
                        {
                            UserId = 4,
                            DateCreated = new DateTime(2023, 1, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.johnson@protonmail.com",
                            LastLoginDate = new DateTime(2023, 8, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "bobJohnson"
                        },
                        new
                        {
                            UserId = 5,
                            DateCreated = new DateTime(2023, 5, 20, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "susan.clark@outlook.com",
                            LastLoginDate = new DateTime(2023, 8, 4, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "susanClark"
                        },
                        new
                        {
                            UserId = 6,
                            DateCreated = new DateTime(2023, 4, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mike.brown@walla.com",
                            LastLoginDate = new DateTime(2023, 8, 5, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "mikeBrown"
                        },
                        new
                        {
                            UserId = 7,
                            DateCreated = new DateTime(2023, 7, 5, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "linda.davis@yahoo.com",
                            LastLoginDate = new DateTime(2023, 8, 6, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "lindaDavis"
                        },
                        new
                        {
                            UserId = 8,
                            DateCreated = new DateTime(2023, 6, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "richard.miller@gmail.com",
                            LastLoginDate = new DateTime(2023, 8, 7, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "richardMiller"
                        },
                        new
                        {
                            UserId = 9,
                            DateCreated = new DateTime(2023, 1, 30, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mary.wilson@protonmail.com",
                            LastLoginDate = new DateTime(2023, 8, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "maryWilson"
                        },
                        new
                        {
                            UserId = 10,
                            DateCreated = new DateTime(2023, 8, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "james.moore@outlook.com",
                            LastLoginDate = new DateTime(2023, 8, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "jamesMoore"
                        },
                        new
                        {
                            UserId = 11,
                            DateCreated = new DateTime(2023, 2, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "patricia.taylor@walla.com",
                            LastLoginDate = new DateTime(2023, 8, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "hashedpassword",
                            PasswordSalt = "salt",
                            UserRole = "User",
                            Username = "patriciaTaylor"
                        });
                });

            modelBuilder.Entity("amore_api.Models.Cart", b =>
                {
                    b.HasOne("amore_api.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("cart_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("amore_api.Models.Cartitem", b =>
                {
                    b.HasOne("amore_api.Models.Cart", "Cart")
                        .WithMany("Cartitems")
                        .HasForeignKey("CartId")
                        .HasConstraintName("cartitems_ibfk_1");

                    b.HasOne("amore_api.Models.Product", "Product")
                        .WithMany("Cartitems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("cartitems_ibfk_2");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("amore_api.Models.Order", b =>
                {
                    b.HasOne("amore_api.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("order_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("amore_api.Models.Orderitem", b =>
                {
                    b.HasOne("amore_api.Models.Order", "Order")
                        .WithMany("Orderitems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("orderitems_ibfk_1");

                    b.HasOne("amore_api.Models.Product", "Product")
                        .WithMany("Orderitems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("orderitems_ibfk_2");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("amore_api.Models.Cart", b =>
                {
                    b.Navigation("Cartitems");
                });

            modelBuilder.Entity("amore_api.Models.Order", b =>
                {
                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("amore_api.Models.Product", b =>
                {
                    b.Navigation("Cartitems");

                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("amore_api.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
